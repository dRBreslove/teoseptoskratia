doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        title Teoseptoskratia - #{coinName}
        link(rel="stylesheet", href="/css/styles.css")
        style.
            body {
                margin: 0;
                padding: 20px;
                font-family: Arial, sans-serif;
            }
            .namespace-container {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 20px;
                margin-top: 20px;
            }
            .namespace-frame {
                width: 100%;
                height: 600px;
                border: 1px solid #ccc;
                border-radius: 4px;
            }
            .namespace-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 10px;
            }
            .namespace-title {
                font-size: 1.2em;
                font-weight: bold;
            }
            .namespace-controls {
                display: flex;
                gap: 10px;
            }
            .sync-button {
                padding: 5px 10px;
                background: #4CAF50;
                color: white;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }
            .sync-button:hover {
                background: #45a049;
            }
    body(data-from=coinName)
        header
            include title
        main
            block content
        footer
            include footer
        script(src="/js/namespace-communication.js")
        script.
            // Initialize namespace communication
            document.addEventListener('DOMContentLoaded', () => {
                const namespaceComm = new NamespaceCommunication();
                
                // Register handlers for blockchain events
                namespaceComm.registerHandler('chainSync', (source, data) => {
                    console.log(`Chain sync from ${source}:`, data);
                });

                namespaceComm.registerHandler('transaction', (source, data) => {
                    console.log(`Transaction from ${source}:`, data);
                    namespaceComm.showNotification(`New transaction from ${source}`);
                });

                namespaceComm.registerHandler('block', (source, data) => {
                    console.log(`Block from ${source}:`, data);
                    namespaceComm.showNotification(`New block from ${source}`);
                });

                // Initialize connections
                const namespaces = ['our-circle', 'itay-circle', 'shiriloo-circle'];
                const ports = [8080, 8081, 8082];
                namespaceComm.initializeConnections(namespaces, ports);
            });

            function syncNamespace(namespace) {
                const frame = document.getElementById(`frame-${namespace}`);
                if (frame && frame.contentWindow) {
                    frame.contentWindow.postMessage({
                        type: 'syncRequest',
                        namespace: namespace
                    }, '*');
                }
            } 