html
    include includes/head
    - var blockchainName = (coinName.indexOf('@')===-1?coinName:coinName.split("@")[1]);
    body(data-from=coinName)
        header
            include includes/title
        main
            include includes/coins
            p
                -let txt1 = "This is where <b>" + from + "</b> can send, <b>" + from + "</b> coins to other entienties on the <b>" + from + "</b> blockchain in the mulichain <b>" + namespace + "</b> namespace."
                -let txt2 = "This is where <b>" + from + "</b> can send <b>" + to + "</b> and other entities, <b>" + to + "</b> coins, on the <b>" + to + "</b> blockchain in the mulichain <b>" + namespace + "</b> namespace."
                p !{to?txt2:txt1}
                a(href="#",onclick="history.back();") back
            h1(id="coin_name",data=from)= coinName
                - const html = "("+((coinName.indexOf('@')===-1)?"":(coinName.split("@")[0] +" on the " +coinName.split("@")[1] ))+" blockchain)"
                small #{html}

            div Multichain Address (MA):
                b= ownerAddress
            p
                a(href="/"+blockchainName+"/blockchain")= "view "+blockchainName+" blockchain"
                span &nbsp;(download&nbsp;
                a(target="_blank" href="https://chromewebstore.google.com/detail/bcjindcccaagfpapjjmafapmmgkkhgoa") JSON Formatter
                span &nbsp;chrome extension)

            br

            p
                aside The node operator "i", receives CPU costs of mining and transacting in the following formula: (CPU usage in Âµs/100000000)*coins. The nonce on this blockchain is composed of two parts: The nonce and the cpu, this adds an extra layer of security and immutability since the nonce/cpu is linked to the transaction amount and it's much harder to re-hash the blockchain.
                h4
                    span Total Coins Mined:&nbsp
                    span(id="coins_in_eco")= coinsInEco
                    div= "on the " + blockchainName + " blockchain"

            if canMine
                div
                    input(id="coins_to_mine", value="100")
                    button(id="mine_btn",data-foreign=foreign) Mine
                    span(id="time_ms")
                div(id="bank")
                    table
                        td(colspan="4")
                            h5 Multichain
                        tr
                            td Blockchain
                            td Total
                            td Transfer
                            td Partner Link
                        each account in accounts

                            tr
                                td
                                    span= (account.name==="i"?(account.name + " (node operator)"):account.name)
                                td
                                    span(id=("account_"+account.name.replace(">","-")))= account.coins
                                - var tmp = account.name.split("@")[0]
                                if(coinName!==account.name && tmp!==from)
                                    td
                                        input(id=("input_"+account.name.replace(">","-")),class="amount")
                                    td
                                        a(href="/" + account.home + "/partner")= account.name
                                else
                                    td
                                    td
                        tr
                            td(colspan="4")
                                button(id="transfer_btn",data-foreign=foreign) Transfer
                                span(id="transfer_cpu")
        footer
            include includes/footer